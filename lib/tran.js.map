{"version":3,"sources":["../src/tran.js"],"names":["getWin","cas","item","count","tranCanvas","ctx","getContext","dots","dotscopy","idots","img","Image","src","getSrc","onload","img_w","width","img_h","height","left","top","x","y","rectsplit","window","onmousedown","e","length","area","getArea","dot","i","qy","t","l","onmousemove","narea","nx","ny","render","onmouseup","event","layerY","offsetTop","document","body","scrollTop","documentElement","layerX","offsetLeft","scrollLeft","clearRect","globalCompositeOperation","ndots","forEach","d","dot1","dot2","dot3","dot4","idot1","idot2","idot3","idot4","renderImage","save","fillStyle","fillRect","arg_1","_arg_1","arg_2","_arg_2","arg_3","_arg_3","beginPath","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","clip","result","getMatrix","apply","arguments","transform","a","b","c","f","drawImage","restore","n","ad_x","ad_y","bc_x","bc_y","x1","y1","x2","y2","ab_x","ab_y","j","push","delectMouse"],"mappings":";;;;;;AAKA;;;;;;AAEA,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;AACvB,QAAIC,QAAQ,EAAZ;AACA,QAAIC,aAAaH,GAAjB;AACA,QAAI,CAACG,UAAL,EAAiB;AACb;AACH;AACD,QAAIC,MAAMD,WAAWE,UAAX,CAAsB,IAAtB,CAAV;;AAEA,QAAIC,OAAO,EAAX;AACA,QAAIC,iBAAJ;AAAA,QAAcC,cAAd;;AAEA,QAAIC,MAAM,IAAIC,KAAJ,EAAV;AACAD,QAAIE,GAAJ,GAAUV,KAAKW,MAAL,EAAV;;AAEAH,QAAII,MAAJ,GAAa,YAAY;AACrB,YAAIC,QAAQL,IAAIM,KAAhB;AACA,YAAIC,QAAQP,IAAIQ,MAAhB;AACA,YAAIC,OAAO,CAACf,WAAWY,KAAX,GAAmBD,KAApB,IAA6B,CAAxC;AACA,YAAIK,MAAM,CAAChB,WAAWc,MAAX,GAAoBD,KAArB,IAA8B,CAAxC;;AAEAP,YAAIM,KAAJ,GAAYD,KAAZ;AACAL,YAAIQ,MAAJ,GAAaD,KAAb;;AAEAV,eAAO,CACH,EAAEc,GAAGF,IAAL,EAAWG,GAAGF,GAAd,EADG,EAEH,EAAEC,GAAGF,OAAOJ,KAAZ,EAAmBO,GAAGF,GAAtB,EAFG,EAGH,EAAEC,GAAGF,OAAOJ,KAAZ,EAAmBO,GAAGF,MAAMH,KAA5B,EAHG,EAIH,EAAEI,GAAGF,IAAL,EAAWG,GAAGF,MAAMH,KAApB,EAJG,CAAP;;AAOA;AACAT,mBAAW,CACP,EAAEa,GAAGF,IAAL,EAAWG,GAAGF,GAAd,EADO,EAEP,EAAEC,GAAGF,OAAOJ,KAAZ,EAAmBO,GAAGF,GAAtB,EAFO,EAGP,EAAEC,GAAGF,OAAOJ,KAAZ,EAAmBO,GAAGF,MAAMH,KAA5B,EAHO,EAIP,EAAEI,GAAGF,IAAL,EAAWG,GAAGF,MAAMH,KAApB,EAJO,CAAX;;AAOA;AACAR,gBAAQc,UAAUpB,KAAV,EAAiBK,SAAS,CAAT,CAAjB,EAA8BA,SAAS,CAAT,CAA9B,EAA2CA,SAAS,CAAT,CAA3C,EAAwDA,SAAS,CAAT,CAAxD,CAAR;;AAEA;;;;AAIAgB,eAAOC,WAAP,GAAqB,UAAUC,CAAV,EAAa;AAC9B,gBAAI,CAACnB,KAAKoB,MAAV,EAAkB;;AAElB,gBAAIC,OAAOC,QAAQH,CAAR,CAAX;;AAEA,gBAAII,YAAJ;AAAA,gBAASC,UAAT;AACA;AACA,gBAAIC,KAAK,EAAT;;AAEA,iBAAKD,IAAI,CAAT,EAAYA,IAAIxB,KAAKoB,MAArB,EAA6BI,GAA7B,EAAkC;AAC9BD,sBAAMvB,KAAKwB,CAAL,CAAN;AACA,oBAAIH,KAAKK,CAAL,IAAWH,IAAIR,CAAJ,GAAQU,EAAnB,IAA0BJ,KAAKK,CAAL,IAAWH,IAAIR,CAAJ,GAAQU,EAA7C,IAAoDJ,KAAKM,CAAL,IAAWJ,IAAIT,CAAJ,GAAQW,EAAvE,IAA8EJ,KAAKM,CAAL,IAAWJ,IAAIT,CAAJ,GAAQW,EAArG,EAA0G;AACtG;AACH,iBAFD,MAEO;AACHF,0BAAM,IAAN;AACH;AACJ;;AAED,gBAAI,CAACA,GAAL,EAAU;;AAEVN,mBAAOW,WAAP,GAAqB,UAAUT,CAAV,EAAa;AAC9B,oBAAIU,QAAQP,QAAQH,CAAR,CAAZ;AACA,oBAAIW,KAAKD,MAAMF,CAAN,GAAUN,KAAKM,CAAxB;AACA,oBAAII,KAAKF,MAAMH,CAAN,GAAUL,KAAKK,CAAxB;;AAEAH,oBAAIT,CAAJ,IAASgB,EAAT;AACAP,oBAAIR,CAAJ,IAASgB,EAAT;;AAEAV,uBAAOQ,KAAP;;AAEAG;AACH,aAXD;;AAaAf,mBAAOgB,SAAP,GAAmB,YAAY;AAC3BhB,uBAAOW,WAAP,GAAqB,IAArB;AACAX,uBAAOgB,SAAP,GAAmB,IAAnB;AACH,aAHD;AAIH,SArCD;AAsCAD;AACH,KAtED;;AA0EA;;;;;AAKA,aAASV,OAAT,CAAiBH,CAAjB,EAAoB;AAChBA,YAAIA,KAAKF,OAAOiB,KAAhB;AACA,eAAO;AACHR,eAAGP,EAAEgB,MAAF,GAAWtC,WAAWuC,SAAtB,GAAkCC,SAASC,IAAT,CAAcC,SAAhD,GAA4DF,SAASG,eAAT,CAAyBD,SADrF;AAEHZ,eAAGR,EAAEsB,MAAF,GAAW5C,WAAW6C,UAAtB,GAAmCL,SAASC,IAAT,CAAcK,UAAjD,GAA8DN,SAASG,eAAT,CAAyBG;AAFvF,SAAP;AAIH;;AAED;;;AAGA,aAASX,MAAT,GAAkB;AACdlC,YAAI8C,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB/C,WAAWY,KAA/B,EAAsCZ,WAAWc,MAAjD;AACAb,YAAI+C,wBAAJ,GAA+B,SAA/B;;AAEA,YAAIC,QAAQ9B,UAAUpB,KAAV,EAAiBI,KAAK,CAAL,CAAjB,EAA0BA,KAAK,CAAL,CAA1B,EAAmCA,KAAK,CAAL,CAAnC,EAA4CA,KAAK,CAAL,CAA5C,CAAZ;;AAEA8C,cAAMC,OAAN,CAAc,UAAUC,CAAV,EAAaxB,CAAb,EAAgB;AAC1B;AACA,gBAAIyB,OAAOH,MAAMtB,CAAN,CAAX;AACA,gBAAI0B,OAAOJ,MAAMtB,IAAI,CAAV,CAAX;AACA,gBAAI2B,OAAOL,MAAMtB,IAAI5B,KAAJ,GAAY,CAAlB,CAAX;AACA,gBAAIwD,OAAON,MAAMtB,IAAI5B,KAAJ,GAAY,CAAlB,CAAX;;AAEA;AACA,gBAAIyD,QAAQnD,MAAMsB,CAAN,CAAZ;AACA,gBAAI8B,QAAQpD,MAAMsB,IAAI,CAAV,CAAZ;AACA,gBAAI+B,QAAQrD,MAAMsB,IAAI5B,KAAJ,GAAY,CAAlB,CAAZ;AACA,gBAAI4D,QAAQtD,MAAMsB,IAAI5B,KAAJ,GAAY,CAAlB,CAAZ;;AAEA,gBAAIsD,QAAQC,IAAR,IAAgB3B,KAAK5B,QAAQ,CAAb,IAAkBA,KAAtC,EAA6C;AACzC;AACA6D,4BAAYF,KAAZ,EAAmBJ,IAAnB,EAAyBG,KAAzB,EAAgCJ,IAAhC,EAAsCM,KAAtC,EAA6CJ,IAA7C;AACA;AACAK,4BAAYJ,KAAZ,EAAmBJ,IAAnB,EAAyBK,KAAzB,EAAgCJ,IAAhC,EAAsCM,KAAtC,EAA6CJ,IAA7C;AACH;AACD,gBAAI,IAAJ,EAAU;AACNtD,oBAAI4D,IAAJ;AACA5D,oBAAI6D,SAAJ,GAAgB,qBAAhB;AACA7D,oBAAI8D,QAAJ,CAAaZ,EAAElC,CAAF,GAAM,CAAnB,EAAsBkC,EAAEjC,CAAF,GAAM,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACAjB,oBAAI4D,IAAJ;AACH;AACJ,SAzBD;AA0BH;;AAED;;;;;;;;;AASA,aAASD,WAAT,CAAqBI,KAArB,EAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA0DC,MAA1D,EAAkE;AAC9DpE,YAAI4D,IAAJ;AACA;AACA5D,YAAIqE,SAAJ;AACArE,YAAIsE,MAAJ,CAAWN,OAAOhD,CAAlB,EAAqBgD,OAAO/C,CAA5B;AACAjB,YAAIuE,MAAJ,CAAWL,OAAOlD,CAAlB,EAAqBkD,OAAOjD,CAA5B;AACAjB,YAAIuE,MAAJ,CAAWH,OAAOpD,CAAlB,EAAqBoD,OAAOnD,CAA5B;AACAjB,YAAIwE,SAAJ;AACA,YAAI,IAAJ,EAAU;AACNxE,gBAAIyE,SAAJ,GAAgB,CAAhB;AACAzE,gBAAI0E,WAAJ,GAAkB,qBAAlB;AACA1E,gBAAI2E,MAAJ;AACH;AACD3E,YAAI4E,IAAJ;;AAEA,YAAI,IAAJ,EAAU;AACN;AACA,gBAAIC,SAAS,iBAAOC,SAAP,CAAiBC,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B,CAAb;;AAEA;AACAhF,gBAAIiF,SAAJ,CAAcJ,OAAOK,CAArB,EAAwBL,OAAOM,CAA/B,EAAkCN,OAAOO,CAAzC,EAA4CP,OAAO3B,CAAnD,EAAsD2B,OAAOxD,CAA7D,EAAgEwD,OAAOQ,CAAvE;;AAEA;AACArF,gBAAIsF,SAAJ,CAAcjF,GAAd,EAAmBD,MAAM,CAAN,EAASY,CAA5B,EAA+BZ,MAAM,CAAN,EAASa,CAAxC,EAA2CZ,IAAIM,KAA/C,EAAsDN,IAAIQ,MAA1D;AACH;;AAEDb,YAAIuF,OAAJ;AACH;;AAGD;;;;;;;;;AASA,aAASrE,SAAT,CAAmBsE,CAAnB,EAAsBN,CAAtB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BlC,CAA/B,EAAkC;AAC9B;AACA,YAAIuC,OAAO,CAACvC,EAAElC,CAAF,GAAMkE,EAAElE,CAAT,IAAcwE,CAAzB;AACA,YAAIE,OAAO,CAACxC,EAAEjC,CAAF,GAAMiE,EAAEjE,CAAT,IAAcuE,CAAzB;AACA;AACA,YAAIG,OAAO,CAACP,EAAEpE,CAAF,GAAMmE,EAAEnE,CAAT,IAAcwE,CAAzB;AACA,YAAII,OAAO,CAACR,EAAEnE,CAAF,GAAMkE,EAAElE,CAAT,IAAcuE,CAAzB;;AAEA,YAAIxC,QAAQ,EAAZ;AACA,YAAI6C,WAAJ;AAAA,YAAQC,WAAR;AAAA,YAAYC,WAAZ;AAAA,YAAgBC,WAAhB;AAAA,YAAoBC,aAApB;AAAA,YAA0BC,aAA1B;;AAEA;AACA,aAAK,IAAIxE,IAAI,CAAb,EAAgBA,KAAK8D,CAArB,EAAwB9D,GAAxB,EAA6B;AACzB;AACAmE,iBAAKX,EAAElE,CAAF,GAAMyE,OAAO/D,CAAlB;AACAoE,iBAAKZ,EAAEjE,CAAF,GAAMyE,OAAOhE,CAAlB;AACA;AACAqE,iBAAKZ,EAAEnE,CAAF,GAAM2E,OAAOjE,CAAlB;AACAsE,iBAAKb,EAAElE,CAAF,GAAM2E,OAAOlE,CAAlB;;AAEA,iBAAK,IAAIyE,IAAI,CAAb,EAAgBA,KAAKX,CAArB,EAAwBW,GAAxB,EAA6B;AACzB;AACAF,uBAAO,CAACF,KAAKF,EAAN,IAAYL,CAAnB;AACAU,uBAAO,CAACF,KAAKF,EAAN,IAAYN,CAAnB;;AAEAxC,sBAAMoD,IAAN,CAAW;AACPpF,uBAAG6E,KAAKI,OAAOE,CADR;AAEPlF,uBAAG6E,KAAKI,OAAOC;AAFR,iBAAX;AAIH;AACJ;AACD,eAAOnD,KAAP;AACH;AACJ;AAjOD;;;;AAkOA,SAASqD,WAAT,GAAuB;AAAElF,WAAOC,WAAP,GAAqB,IAArB;AAA2B;;kBAErC,EAAEzB,cAAF,EAAU0G,wBAAV,E","file":"tran.js","sourcesContent":["\n/**\n * Created by fenghuitao on 17-8-28.\n */\n\nimport matrix from './matrix.js';\n\nfunction getWin(cas, item) {\n    let count = 10;\n    let tranCanvas = cas;\n    if (!tranCanvas) {\n        return;\n    }\n    let ctx = tranCanvas.getContext(\"2d\");\n\n    let dots = [];\n    let dotscopy, idots;\n\n    let img = new Image();\n    img.src = item.getSrc();\n\n    img.onload = function () {\n        let img_w = img.width;\n        let img_h = img.height;\n        let left = (tranCanvas.width - img_w) / 2;\n        let top = (tranCanvas.height - img_h) / 2;\n\n        img.width = img_w;\n        img.height = img_h;\n\n        dots = [\n            { x: left, y: top },\n            { x: left + img_w, y: top },\n            { x: left + img_w, y: top + img_h },\n            { x: left, y: top + img_h }\n        ];\n\n        //保存一份不变的拷贝\n        dotscopy = [\n            { x: left, y: top },\n            { x: left + img_w, y: top },\n            { x: left + img_w, y: top + img_h },\n            { x: left, y: top + img_h }\n        ];\n\n        //获得所有初始点坐标\n        idots = rectsplit(count, dotscopy[0], dotscopy[1], dotscopy[2], dotscopy[3]);\n\n        /**\n         * 鼠标拖动事件绑定\n         * @param e\n         */\n        window.onmousedown = function (e) {\n            if (!dots.length) return;\n\n            let area = getArea(e);\n\n            let dot, i;\n            //鼠标事件触发区域\n            let qy = 40;\n\n            for (i = 0; i < dots.length; i++) {\n                dot = dots[i];\n                if (area.t >= (dot.y - qy) && area.t <= (dot.y + qy) && area.l >= (dot.x - qy) && area.l <= (dot.x + qy)) {\n                    break;\n                } else {\n                    dot = null;\n                }\n            }\n\n            if (!dot) return;\n\n            window.onmousemove = function (e) {\n                let narea = getArea(e);\n                let nx = narea.l - area.l;\n                let ny = narea.t - area.t;\n\n                dot.x += nx;\n                dot.y += ny;\n\n                area = narea;\n\n                render();\n            };\n\n            window.onmouseup = function () {\n                window.onmousemove = null;\n                window.onmouseup = null;\n            }\n        };\n        render()\n    };\n\n\n\n    /**\n     * 获取鼠标点击/移过的位置\n     * @param e\n     * @returns {{t: number, l: number}}\n     */\n    function getArea(e) {\n        e = e || window.event;\n        return {\n            t: e.layerY - tranCanvas.offsetTop + document.body.scrollTop + document.documentElement.scrollTop,\n            l: e.layerX - tranCanvas.offsetLeft + document.body.scrollLeft + document.documentElement.scrollLeft\n        }\n    }\n\n    /**\n     * 画布渲染\n     */\n    function render() {\n        ctx.clearRect(0, 0, tranCanvas.width, tranCanvas.height);\n        ctx.globalCompositeOperation = 'lighter'\n\n        let ndots = rectsplit(count, dots[0], dots[1], dots[2], dots[3]);\n\n        ndots.forEach(function (d, i) {\n            //获取平行四边形的四个点\n            let dot1 = ndots[i];\n            let dot2 = ndots[i + 1];\n            let dot3 = ndots[i + count + 2];\n            let dot4 = ndots[i + count + 1];\n\n            //获取初始平行四边形的四个点\n            let idot1 = idots[i];\n            let idot2 = idots[i + 1];\n            let idot3 = idots[i + count + 2];\n            let idot4 = idots[i + count + 1];\n\n            if (dot2 && dot3 && i % (count + 1) < count) {\n                //绘制三角形的下半部分\n                renderImage(idot3, dot3, idot2, dot2, idot4, dot4);\n                //绘制三角形的上半部分\n                renderImage(idot1, dot1, idot2, dot2, idot4, dot4);\n            }\n            if (true) {\n                ctx.save();\n                ctx.fillStyle = \"rgba(255,255,255,0)\";\n                ctx.fillRect(d.x - 1, d.y - 1, 2, 2);\n                ctx.save();\n            }\n        });\n    }\n\n    /**\n     * 计算矩阵，同时渲染图片\n     * @param arg_1\n     * @param _arg_1\n     * @param arg_2\n     * @param _arg_2\n     * @param arg_3\n     * @param _arg_3\n     */\n    function renderImage(arg_1, _arg_1, arg_2, _arg_2, arg_3, _arg_3) {\n        ctx.save();\n        // 根据变换后的坐标创建剪切区域\n        ctx.beginPath();\n        ctx.moveTo(_arg_1.x, _arg_1.y);\n        ctx.lineTo(_arg_2.x, _arg_2.y);\n        ctx.lineTo(_arg_3.x, _arg_3.y);\n        ctx.closePath();\n        if (true) {\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = \"rgba(255,255,255,0)\";\n            ctx.stroke();\n        }\n        ctx.clip();\n\n        if (true) {\n            //传入变换前后的点坐标，计算变换矩阵\n            let result = matrix.getMatrix.apply(this, arguments);\n\n            //变形\n            ctx.transform(result.a, result.b, result.c, result.d, result.e, result.f);\n\n            //绘制图片\n            ctx.drawImage(img, idots[0].x, idots[0].y, img.width, img.height);\n        }\n\n        ctx.restore();\n    }\n\n\n    /**\n     * 将abcd四边形分割成n的n次方份，获取n等分后的所有点坐标\n     * @param n     多少等分\n     * @param a     a点坐标\n     * @param b     b点坐标\n     * @param c     c点坐标\n     * @param d     d点坐标\n     * @returns {Array}\n     */\n    function rectsplit(n, a, b, c, d) {\n        //ad向量方向n等分\n        let ad_x = (d.x - a.x) / n;\n        let ad_y = (d.y - a.y) / n;\n        //bc向量方向n等分\n        let bc_x = (c.x - b.x) / n;\n        let bc_y = (c.y - b.y) / n;\n\n        let ndots = [];\n        let x1, y1, x2, y2, ab_x, ab_y;\n\n        //左边点递增，右边点递增，获取每一次递增后的新的向量，继续n等分，从而获取所有点坐标\n        for (let i = 0; i <= n; i++) {\n            //获得ad向量n等分后的坐标\n            x1 = a.x + ad_x * i;\n            y1 = a.y + ad_y * i;\n            //获得bc向量n等分后的坐标\n            x2 = b.x + bc_x * i;\n            y2 = b.y + bc_y * i;\n\n            for (let j = 0; j <= n; j++) {\n                //ab向量为：[x2 - x1 , y2 - y1]，所以n等分后的增量为除于n\n                ab_x = (x2 - x1) / n;\n                ab_y = (y2 - y1) / n;\n\n                ndots.push({\n                    x: x1 + ab_x * j,\n                    y: y1 + ab_y * j\n                })\n            }\n        }\n        return ndots;\n    }\n}\nfunction delectMouse() { window.onmousedown = null };\n\nexport default { getWin, delectMouse };"]}